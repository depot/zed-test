name: Build Servo

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: depot-ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          ccache \
          clang \
          cmake \
          curl \
          g++ \
          git \
          gperf \
          libdbus-1-dev \
          libfreetype6-dev \
          libgl1-mesa-dri \
          libgles2-mesa-dev \
          libglib2.0-dev \
          gstreamer1.0-plugins-good \
          libgstreamer-plugins-good1.0-dev \
          gstreamer1.0-plugins-bad \
          libgstreamer-plugins-bad1.0-dev \
          gstreamer1.0-plugins-ugly \
          gstreamer1.0-plugins-base \
          libgstreamer-plugins-base1.0-dev \
          gstreamer1.0-libav \
          libgstrtspserver-1.0-dev \
          gstreamer1.0-tools \
          libges-1.0-dev \
          libharfbuzz-dev \
          liblzma-dev \
          libudev-dev \
          libunwind-dev \
          libvulkan1 \
          libx11-dev \
          libxcb-render0-dev \
          libxcb-shape0-dev \
          libxcb-xfixes0-dev \
          libxmu-dev \
          libxmu6 \
          libegl1-mesa-dev \
          llvm-dev \
          m4 \
          xorg-dev \
          libxkbcommon0 \
          libxkbcommon-x11-0 \
          tshark \
          python3 \
          python3-pip

    - name: Install mold linker
      run: |
        MOLD_VERSION=$(curl -s https://api.github.com/repos/rui314/mold/releases/latest | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
        echo "Installing mold version: $MOLD_VERSION"
        curl -L "https://github.com/rui314/mold/releases/download/v${MOLD_VERSION}/mold-${MOLD_VERSION}-x86_64-linux.tar.gz" | tar xzf -
        sudo cp -r "mold-${MOLD_VERSION}-x86_64-linux/bin/"* /usr/local/bin/
        sudo cp -r "mold-${MOLD_VERSION}-x86_64-linux/lib/"* /usr/local/lib/
        sudo ldconfig
        mold --version

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install Rust
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Setup Rust toolchain
      run: |
        source $HOME/.cargo/env
        rustup override set nightly
        rustup component add clippy rustfmt --toolchain nightly
        rustc --version
        cargo --version

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache cargo git dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-git-

    - name: Cache target directory
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-target-

    - name: Bootstrap build environment
      run: |
        source $HOME/.cargo/env
        ./mach bootstrap

    - name: Run tests
      run: |
        source $HOME/.cargo/env
        ./mach test-unit

    - name: Build Servo (release)
      run: |
        source $HOME/.cargo/env
        ./mach build --release

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: servo-binary
        path: target/release/servo
        retention-days: 7
